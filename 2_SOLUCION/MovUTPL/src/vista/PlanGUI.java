/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.ClienteControlador;
import controlador.PlanControlador;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Plan;
import modelo.PlanPostPagoMegas;
import modelo.PlanPostPagoMinutos;
import modelo.PlanPostPagoMinutosMegas;
import modelo.PlanPostPagoMinutosMegasEconomico;

/**
 *
 * @author LENOVO
 */
public class PlanGUI extends javax.swing.JFrame {

    private final ClienteControlador clienteControlador = new ClienteControlador();
    private final PlanControlador planControlador = new PlanControlador();
    private int clienteIdSeleccionado = -1;

    public PlanGUI() {
        initComponents();
        cargarClientes();
        cmbTipoPlan.setSelectedIndex(0);
        ajustarCamposPorTipoPlan();
    }

    private void cargarClientes() {
        List<Cliente> clientes = clienteControlador.listarClientes();
        cmbClientes.removeAllItems();
        for (Cliente c : clientes) {
            cmbClientes.addItem(c.getId() + " - " + c.getNombres());
        }
    }

    private void ajustarCamposPorTipoPlan() {
        String tipo = (String) cmbTipoPlan.getSelectedItem();

        txtMinutos.setEnabled(false);
        txtCostoMinuto.setEnabled(false);
        txtMinInt.setEnabled(false);
        txtCostoMinInt.setEnabled(false);
        txtGigas.setEnabled(false);
        txtCostoGiga.setEnabled(false);
        txtTarifaBase.setEnabled(false);
        txtDescuento.setEnabled(false);

        switch (tipo) {
            case "Minutos" -> {
                txtMinutos.setEnabled(true);
                txtCostoMinuto.setEnabled(true);
                txtMinInt.setEnabled(true);
                txtCostoMinInt.setEnabled(true);
            }
            case "Megas" -> {
                txtGigas.setEnabled(true);
                txtCostoGiga.setEnabled(true);
                txtTarifaBase.setEnabled(true);
            }
            case "Minutos + Megas" -> {
                txtMinutos.setEnabled(true);
                txtCostoMinuto.setEnabled(true);
                txtGigas.setEnabled(true);
                txtCostoGiga.setEnabled(true);
            }
            case "Económico" -> {
                txtMinutos.setEnabled(true);
                txtCostoMinuto.setEnabled(true);
                txtGigas.setEnabled(true);
                txtCostoGiga.setEnabled(true);
                txtDescuento.setEnabled(true);
            }
        }
    }

    private void limpiarCampos() {
        txtMinutos.setText("");
        txtCostoMinuto.setText("");
        txtMinInt.setText("");
        txtCostoMinInt.setText("");
        txtGigas.setText("");
        txtCostoGiga.setText("");
        txtTarifaBase.setText("");
        txtDescuento.setText("");
    }

    private void cargarPlanesCliente() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"ID", "Descripción", "Pago"});

        List<Plan> planes = planControlador.obtenerPlanesDeCliente(clienteIdSeleccionado);
        for (Plan p : planes) {
            modelo.addRow(new Object[]{
                p.getId(),
                p.getDescripcion(),
                p.calcularPago()
            });
        }

        tblPlanes.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbClientes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbTipoPlan = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtMinutos = new javax.swing.JTextField();
        txtCostoMinuto = new javax.swing.JTextField();
        txtMinInt = new javax.swing.JTextField();
        txtCostoMinInt = new javax.swing.JTextField();
        txtGigas = new javax.swing.JTextField();
        txtCostoGiga = new javax.swing.JTextField();
        txtTarifaBase = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        btnAsignar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlanes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Seleccione Cliente");

        cmbClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientesActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo de Plan");

        cmbTipoPlan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minutos", "Megas", "Minutos + Megas", "Económico" }));
        cmbTipoPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoPlanActionPerformed(evt);
            }
        });

        jLabel3.setText("Minutos totales");

        jLabel4.setText("Costo por minuto");

        jLabel5.setText("Minutos internacionales");

        jLabel6.setText("Costo min internacional");

        jLabel7.setText("Gigas");

        jLabel8.setText("Costo por giga");

        jLabel9.setText("Tarifa base");

        jLabel10.setText("Descuento (%)");

        btnAsignar.setText("Asignar Plan");
        btnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarActionPerformed(evt);
            }
        });

        btnVolver.setText("Menu Principal");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        tblPlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPlanes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbTipoPlan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMinutos)
                            .addComponent(txtCostoMinuto)
                            .addComponent(txtMinInt)
                            .addComponent(txtCostoMinInt)
                            .addComponent(txtGigas)
                            .addComponent(txtCostoGiga)
                            .addComponent(txtTarifaBase)
                            .addComponent(txtDescuento)
                            .addComponent(cmbClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAsignar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbTipoPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCostoMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMinInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAsignar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCostoMinInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtGigas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCostoGiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTarifaBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarActionPerformed
        if (clienteIdSeleccionado == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un cliente.");
            return;
        }

        if (!planControlador.puedeAsignarOtroPlan(clienteIdSeleccionado)) {
            JOptionPane.showMessageDialog(this, "El cliente ya tiene 2 planes asignados.");
            return;
        }

        String tipo = (String) cmbTipoPlan.getSelectedItem();
        Plan plan = null;

        try {
            switch (tipo) {
                case "Minutos" -> {
                    if (txtMinutos.isEnabled() && txtCostoMinuto.isEnabled()
                            && txtMinInt.isEnabled() && txtCostoMinInt.isEnabled()) {

                        int minutos = Integer.parseInt(txtMinutos.getText().trim());
                        double costoMinuto = Double.parseDouble(txtCostoMinuto.getText().trim());
                        int minInt = Integer.parseInt(txtMinInt.getText().trim());
                        double costoMinInt = Double.parseDouble(txtCostoMinInt.getText().trim());

                        plan = new PlanPostPagoMinutos(minutos, costoMinuto, minInt, costoMinInt);
                    }
                }

                case "Megas" -> {
                    if (txtGigas.isEnabled() && txtCostoGiga.isEnabled() && txtTarifaBase.isEnabled()) {

                        double gigas = Double.parseDouble(txtGigas.getText().trim());
                        double costoGiga = Double.parseDouble(txtCostoGiga.getText().trim());
                        double tarifaBase = Double.parseDouble(txtTarifaBase.getText().trim());

                        plan = new PlanPostPagoMegas(gigas, costoGiga, tarifaBase);
                    }
                }

                case "Minutos + Megas" -> {
                    if (txtMinutos.isEnabled() && txtCostoMinuto.isEnabled()
                            && txtGigas.isEnabled() && txtCostoGiga.isEnabled()) {

                        int minutos = Integer.parseInt(txtMinutos.getText().trim());
                        double costoMinuto = Double.parseDouble(txtCostoMinuto.getText().trim());
                        double gigas = Double.parseDouble(txtGigas.getText().trim());
                        double costoGiga = Double.parseDouble(txtCostoGiga.getText().trim());

                        plan = new PlanPostPagoMinutosMegas(minutos, costoMinuto, gigas, costoGiga);
                    }
                }

                case "Económico" -> {
                    if (txtMinutos.isEnabled() && txtCostoMinuto.isEnabled()
                            && txtGigas.isEnabled() && txtCostoGiga.isEnabled()
                            && txtDescuento.isEnabled()) {

                        int minutos = Integer.parseInt(txtMinutos.getText().trim());
                        double costoMinuto = Double.parseDouble(txtCostoMinuto.getText().trim());
                        double gigas = Double.parseDouble(txtGigas.getText().trim());
                        double costoGiga = Double.parseDouble(txtCostoGiga.getText().trim());
                        double descuento = Double.parseDouble(txtDescuento.getText().trim());

                        plan = new PlanPostPagoMinutosMegasEconomico(minutos, costoMinuto, gigas, costoGiga, descuento);
                    }
                }
            }

            if (plan != null) {
                int idPlan = planControlador.registrarPlan(plan);
                if (idPlan != -1) {
                    planControlador.asignarPlanACliente(clienteIdSeleccionado, idPlan);
                    JOptionPane.showMessageDialog(this, "Plan asignado correctamente.");
                    cargarPlanesCliente();
                    limpiarCampos();    
                } else {
                    JOptionPane.showMessageDialog(this, "Error al registrar el plan.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Por favor ingrese todos los datos correctamente.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese valores numéricos válidos.");
        }
    }//GEN-LAST:event_btnAsignarActionPerformed

    private void cmbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientesActionPerformed
        if (cmbClientes.getSelectedItem() != null) {
            String item = (String) cmbClientes.getSelectedItem();
            clienteIdSeleccionado = Integer.parseInt(item.split(" - ")[0]);
            cargarPlanesCliente();
        }
    }//GEN-LAST:event_cmbClientesActionPerformed

    private void cmbTipoPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoPlanActionPerformed
        ajustarCamposPorTipoPlan();
    }//GEN-LAST:event_cmbTipoPlanActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        new MenuPrincipal().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlanGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlanGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbClientes;
    private javax.swing.JComboBox<String> cmbTipoPlan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPlanes;
    private javax.swing.JTextField txtCostoGiga;
    private javax.swing.JTextField txtCostoMinInt;
    private javax.swing.JTextField txtCostoMinuto;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtGigas;
    private javax.swing.JTextField txtMinInt;
    private javax.swing.JTextField txtMinutos;
    private javax.swing.JTextField txtTarifaBase;
    // End of variables declaration//GEN-END:variables
}
